type Programe {
  id: ID!
  proCode: String!
  title: String!
}

type Todo {
  id: ID!
  name: String!
  description: String
  completed: Boolean
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelProgrameConnection {
  items: [Programe]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelProgrameFilterInput {
  id: ModelIDFilterInput
  proCode: ModelStringFilterInput
  title: ModelStringFilterInput
  and: [ModelProgrameFilterInput]
  or: [ModelProgrameFilterInput]
  not: ModelProgrameFilterInput
}

type Query {
  getPrograme(id: ID!): Programe
  listProgrames(filter: ModelProgrameFilterInput, limit: Int, nextToken: String): ModelProgrameConnection
  getTodo(id: ID!): Todo
  listTodos(filter: ModelTodoFilterInput, limit: Int, nextToken: String): ModelTodoConnection
}

input CreateProgrameInput {
  id: ID
  proCode: String!
  title: String!
}

input UpdateProgrameInput {
  id: ID!
  proCode: String
  title: String
}

input DeleteProgrameInput {
  id: ID
}

type Mutation {
  createPrograme(input: CreateProgrameInput!): Programe
  updatePrograme(input: UpdateProgrameInput!): Programe
  deletePrograme(input: DeleteProgrameInput!): Programe
  createTodo(input: CreateTodoInput!): Todo
  updateTodo(input: UpdateTodoInput!): Todo
  deleteTodo(input: DeleteTodoInput!): Todo
}

type Subscription {
  onCreatePrograme: Programe @aws_subscribe(mutations: ["createPrograme"])
  onUpdatePrograme: Programe @aws_subscribe(mutations: ["updatePrograme"])
  onDeletePrograme: Programe @aws_subscribe(mutations: ["deletePrograme"])
  onCreateTodo: Todo @aws_subscribe(mutations: ["createTodo"])
  onUpdateTodo: Todo @aws_subscribe(mutations: ["updateTodo"])
  onDeleteTodo: Todo @aws_subscribe(mutations: ["deleteTodo"])
}

type ModelTodoConnection {
  items: [Todo]
  nextToken: String
}

input ModelTodoFilterInput {
  id: ModelIDFilterInput
  name: ModelStringFilterInput
  description: ModelStringFilterInput
  completed: ModelBooleanFilterInput
  and: [ModelTodoFilterInput]
  or: [ModelTodoFilterInput]
  not: ModelTodoFilterInput
}

input CreateTodoInput {
  id: ID
  name: String!
  description: String
  completed: Boolean
}

input UpdateTodoInput {
  id: ID!
  name: String
  description: String
  completed: Boolean
}

input DeleteTodoInput {
  id: ID
}
